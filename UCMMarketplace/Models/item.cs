
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;

namespace UCMMarketplace.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Web;

    public partial class item
    {
        public long ItemID { get; set; }
        [Required]
        public string Title { get; set; }
        [Display(Name = "Upload Image File")]
        //[RegularExpression(@"([a-zA-Z0-9\s_\\.\-:])+(.png|.jpg|.jpeg)$", ErrorMessage = "Only Image files allowed.")]
        public string ImagePath { get; set; }
       // [DataType(DataType.MultilineText)]
        public string Description { get; set; }
        [DisplayFormat(DataFormatString = "{0:C}")]
        public Nullable<double> Price { get; set; }
        public string Condition { get; set; }
        public string Status { get; set; }
        public int UploadUserID { get; set; }
        public int CategoryID { get; set; }
        [ForeignKey("CategoryId")]
        public virtual category category { get; set; }
        [ForeignKey("UploadUserID")]
        public virtual user user { get; set; }
        [DataType(DataType.Upload)]
        [Display(Name = "Upload Image File")]
        [Required(ErrorMessage = "Please choose file to upload.")]
        //[RegularExpression(@"([a-zA-Z0-9\s_\\.\-:])+(.png|.jpg|.jpeg)$", ErrorMessage = "Only Image files allowed.")]
        public HttpPostedFileBase[] Imagefile
        {
            get; set;
        }
        public string ItemCond { get; set; }
        [Display(Name = "Select Category Name")]
        [Required]
        public string CategoryList { get; set; }
        public string CategoryName { get; set; }
        //public virtual ICollection<wishlist> wishlists { get; set; }

    }
    public enum ItemCondition
    {
        New,
        BarelyUsed,
        Used
    }

}
//public class ValidateFileAttribute : ValidationAttribute
//{
//    public override bool IsValid(object value)
//    {
//        //int MaxContentLength = 1024 * 1024 * 3; //3 MB
//        string[] AllowedFileExtensions = new string[] { ".jpg", ".png", ".jpeg" };

//        var file = value as HttpPostedFileBase;

//        if (file == null)
//            return false;
//        else if (!AllowedFileExtensions.Contains(file.FileName.Substring(file.FileName.LastIndexOf('.'))))
//        {
//            ErrorMessage = "Please upload Item image file of type: " + string.Join(", ", AllowedFileExtensions);
//            return false;
//        }
//        //else if (file.ContentLength > MaxContentLength)
//        //{
//        //    ErrorMessage = "Your Photo is too large, maximum allowed size is : " + (MaxContentLength / 1024).ToString() + "MB";
//        //    return false;
//        //}
//        else
//            return true;
//    }
//}
