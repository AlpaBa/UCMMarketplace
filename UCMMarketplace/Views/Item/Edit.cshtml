@model UCMMarketplace.Models.item

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    

<div class="form-horizontal">
    <h4>item</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ItemID)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "Description required", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => model.Price, "Description required", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.DropDownList("ItemCond",
                new SelectList(Enum.GetValues(typeof(UCMMarketplace.Models.ItemCondition))),
                "Select Condition",
                new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.Condition, ViewBag.ItemCondition as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Status, ViewBag.ItemStatus as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Imagefile" multiple />
            <img src="@Url.Content(Model.ImagePath)" width="150" height="250" />
            @*@Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        <div id="dynamicimage">

        </div>
    </div>
    @Html.HiddenFor(model => model.CategoryID)
    @Html.HiddenFor(model => model.UploadUserID)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }
    <div>
        @Html.ActionLink("Home", "Index", "Home", null, new { id = Model.ItemID })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
