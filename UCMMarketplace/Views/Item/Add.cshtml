@model UCMMarketplace.Models.item

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>

@using (Html.BeginForm("Add", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>item</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ItemCond",
              new SelectList(Enum.GetValues(typeof(UCMMarketplace.Models.ItemCondition))),
              "Select Condition",
              new { @class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryList", ViewBag.categoryname as SelectList, "Category Name", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Imagefile" required multiple onchange="loadfile(event)" />
            @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
        

}
<div>
    @Html.ActionLink("Home", "Index", "Home", null, null)
    
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
<script>
    var loadfile = function (event) {
        var files = event.target.files;
        for (var i = 0; i = files.length; i++) {
            $("dynamicimage").append < "img src='" + URL.createObjectURL(event.target.files[i] + "' class='dynamicimg'/><br> ");
        }
    }
</script>